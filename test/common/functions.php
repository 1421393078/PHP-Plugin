<?php
/*-------------------------------------------------------------------------------------------------
 Script Name: functions.php
 Script Version: 1.0
 Author: Tony Wei (魏志國) tonywei123@gmail.com
 Description: 共用函式庫
 Revision History:
   1.0: original version 2007/1/4

-------------------------------------------------------------------------------------------------*/



// -------------------------------------------------------------------------------------------------
// 以下依據開頭英文字母排序
// 命名法則如下:
// Abc_Abc      一般自訂函數
// abcabc          補充 PHP 內建函數之不足, 因此同內建函數的命名法則
// abcAbcAbc  函數名稱太長, 以英文完整描述替代
// -------------------------------------------------------------------------------------------------

// -------------------------------------------------------------------------------------------------
// 加上 http://
// -------------------------------------------------------------------------------------------------
function Add_Http( $str ) {
	return ( strpos( $str, "http" ) > -1 ) ? $str : ( "http://" . $str );
}

// -------------------------------------------------------------------------------------------------
// 轉換 Form 變數內的危險字元, 避免 SQL Injection 攻擊
// -------------------------------------------------------------------------------------------------
function Avoid_Injection( $str ) {
	return str_replace( "'", "''", $str );
}

// -------------------------------------------------------------------------------------------------
// 取得副檔名
// -------------------------------------------------------------------------------------------------
function extname( $filename ) {
	$ext = strtolower( substr( $filename, strrpos( $filename, "." ) + 1 ) );
	return $ext;
}

// -------------------------------------------------------------------------------------------------
// 檢查傳入參數是否為整數數字
// -------------------------------------------------------------------------------------------------
function CheckInt( $str ) {
	if ( $str == "" || strval( intval( $str ) ) != $str ) {
		return false;
	}
	return true;
}

// -------------------------------------------------------------------------------------------------
// 取得亂數組合的英數字
// todo: 避開肉眼辨識容易混淆的 1 l O 0 2 Z q 9
// -------------------------------------------------------------------------------------------------
function Get_Rand( $digit, $type = 0 )
{
	$sRand = "";
	for ( $i=0 ; $i < $digit ; $i++ ) {
		$alphabet = 0;
		switch ( $type ) {
			case 0: // 數字 + 大寫 + 小寫
				$alphabet = rand( 1, 3 );
				break;
			case 1: // 數字 + 小寫
				$alphabet = rand( 1, 2 );
				break;
			case 2: // 數字
				$alphabet = 1;
				break;
		}
		switch ( $alphabet ) {
			case 1:
				$sRand .= chr( 48 + rand( 0, 9 ) ); // 阿拉伯數字
				break;
			case 2:
				$sRand .= chr( 97 + rand( 0, 25 ) ); // 小寫英文字母
				break;
			case 3:
				$sRand .= chr( 65 + rand( 0, 25 ) ); // 大寫英文字母
				break;
		}
	}
	return $sRand;
}

// -------------------------------------------------------------------------------------------------
// 取得除了此參數以外的完整 QueryString
// -------------------------------------------------------------------------------------------------
function getUrlWithout( $paraName ) {
	$url   = "";
	$para = "?";
	foreach( $_GET as $key => $value ) {
		if ( $key == "url" ) {
			$url   = "/" . $value;
		}
		else {
			if ( $key != $paraName ) {
				$para .= $key . "=" . urlencode( $value ) . "&";
			}
		}
	}
	$url .= $para;
	return $url;
}

// -------------------------------------------------------------------------------------------------
// 自動斷行
// -------------------------------------------------------------------------------------------------
function LineBreak( $str, $breaklen, $padding ) {
	$oldlen = mb_strlen( $str, "UTF-8" );
	$len      = mb_strlen( $str, "UTF-8" );
	$new = "";
	while ( $len > 0 ) {
		if ( $len != $oldlen ) {
			$new .= "<br>" . $padding;
		}
		$cut = ( $len > $breaklen ) ? $breaklen : $len;
		$new .= mb_substr( $str, 0, $cut,"UTF-8" );
		$str     = mb_substr( $str, $cut, $len,"UTF-8" );
		$len    = mb_strlen( $str, "UTF-8" );
	}
	return $new;
}


// -------------------------------------------------------------------------------------------------
// 輸出警告訊息, 並退回原網頁
// -------------------------------------------------------------------------------------------------
function Msg_Back( $str ) {
	print "<script>alert(\"" . $str . "\"); history.back();</script>";  exit;
}

// -------------------------------------------------------------------------------------------------
// 輸出警告訊息, 並重新導向
// -------------------------------------------------------------------------------------------------
function Msg_Redirect( $str, $url ) {
	print "<script>alert(\"" . $str . "\"); location.href=\"" . $url . "\";</script>";  exit;
}

// -------------------------------------------------------------------------------------------------
// 輸出警告訊息, 並重新導向回原來的網頁
// -------------------------------------------------------------------------------------------------
function Msg_RedirectSource( $str ) {
	print "<script>alert(\"" . $str . "\"); location.href=\"" . $_SERVER["HTTP_REFERER"] . "\";</script>";  exit;
}

// -------------------------------------------------------------------------------------------------
// 輸出警告訊息, 並結束程式
// -------------------------------------------------------------------------------------------------
function Msg_Stop( $str ) {
	print "<script>alert(\"" . $str . "\");</script>";  exit;
}

// -------------------------------------------------------------------------------------------------
// 網頁重新導向
// -------------------------------------------------------------------------------------------------
function Redirect( $url ) {
	header( "Location: " . $url );  exit;
}

// -------------------------------------------------------------------------------------------------
// 直接在下一個步驟重新導向
// -------------------------------------------------------------------------------------------------
function Redirect_Inside( $url ) {
	global $myPage;
	$myPage->sFunction = $url;
}

// -------------------------------------------------------------------------------------------------
// 過濾 HTML 標籤
// -------------------------------------------------------------------------------------------------
function Strip_Html( $str )
{
	$tmp = $str;
	$tmp = str_replace( "<", "&lt;", $tmp );
	$tmp = str_replace( ">", "&gt;", $tmp );
	$tmp = str_replace( "'", "''", $tmp );
	return $tmp;
}


/*-------------------------------------------------------------------------------------------------
 Debug Functions
 for debug use only
-------------------------------------------------------------------------------------------------*/

// -------------------------------------------------------------------------------------------------
// 中斷點, 暫停執行
// -------------------------------------------------------------------------------------------------
function dd()
{
	print "stop -- " . date( "H:i:s", time() ); exit;
}

// -------------------------------------------------------------------------------------------------
// 秀出 $_POST 的全部內容
// -------------------------------------------------------------------------------------------------
function pp()
{
	print "<pre>";
	print_r( $_POST );
	print "</pre>";
	exit;
}

// -------------------------------------------------------------------------------------------------
// 秀出 $myQuery 資料庫查詢字串
// -------------------------------------------------------------------------------------------------
function qq()
{
	global $myQuery; print $myQuery; exit;
}

if(!function_exists('json_encode')){

	function json_encode( $data ) {             
	    if( is_array($data) || is_object($data) ) {  
	        $islist = is_array($data) && ( empty($data) || array_keys($data) === range(0,count($data)-1) );  
	   
	        if( $islist ) {  
	            $json = '[' . implode(',', array_map('json_encode', $data) ) . ']';  
	        } else {  
	            $items = Array();  
	            foreach( $data as $key => $value ) {  
	                $items[] = json_encode("$key") . ':' . json_encode($value);  
	            }  
	            $json = '{' . implode(',', $items) . '}';  
	        }  
	    } elseif( is_string($data) ) {  
	        # Escape non-printable or Non-ASCII characters.  
	        # I also put the \\ character first, as suggested in comments on the 'addclashes' page.  
	        $string = '"' . addcslashes($data, "\\\"\n\r\t/" . chr(8) . chr(12)) . '"';  
	        $json    = '';  
	        $len    = strlen($string);  
	        # Convert UTF-8 to Hexadecimal Codepoints.  
	        for( $i = 0; $i < $len; $i++ ) {  
	            $char = $string[$i];  
	            $c1 = ord($char);  
	   
	            # Single byte;  
	            if( $c1 <128 ) {  
	                $json .= ($c1 > 31) ? $char : sprintf("\\u%04x", $c1);  
	                continue;  
	            }  
	   
	            # Double byte  
	            $c2 = ord($string[++$i]);  
	            if ( ($c1 & 32) === 0 ) {  
	                $json .= sprintf("\\u%04x", ($c1 - 192) * 64 + $c2 - 128);  
	                continue;  
	            }  
	   
	            # Triple  
	            $c3 = ord($string[++$i]);  
	            if( ($c1 & 16) === 0 ) {  
	                $json .= sprintf("\\u%04x", (($c1 - 224) <<12) + (($c2 - 128) << 6) + ($c3 - 128));  
	                continue;  
	            }  
	   
	            # Quadruple  
	            $c4 = ord($string[++$i]);  
	            if( ($c1 & 8 ) === 0 ) {  
	                $u = (($c1 & 15) << 2) + (($c2>>4) & 3) - 1;  
	   
	                $w1 = (54<<10) + ($u<<6) + (($c2 & 15) << 2) + (($c3>>4) & 3);  
	                $w2 = (55<<10) + (($c3 & 15)<<6) + ($c4-128);  
	                $json .= sprintf("\\u%04x\\u%04x", $w1, $w2);  
	            }  
	        }  
	    } else {  
	        # int, floats, bools, null  
	        $json = strtolower(var_export( $data, true ));  
	    }  
	    return $json;  
	} 
}

?>